[{"/Users/ganeshkoushik/Documents/Projects/employee-challenges/src/index.js":"1","/Users/ganeshkoushik/Documents/Projects/employee-challenges/src/App.js":"2","/Users/ganeshkoushik/Documents/Projects/employee-challenges/src/reportWebVitals.js":"3","/Users/ganeshkoushik/Documents/Projects/employee-challenges/src/components/Login/Login.js":"4","/Users/ganeshkoushik/Documents/Projects/employee-challenges/src/components/Home/Home.js":"5","/Users/ganeshkoushik/Documents/Projects/employee-challenges/src/components/Home/CreateChallenges.js":"6"},{"size":500,"mtime":1642146621211,"results":"7","hashOfConfig":"8"},{"size":524,"mtime":1642313503913,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1642146621214,"results":"10","hashOfConfig":"8"},{"size":4011,"mtime":1642511547938,"results":"11","hashOfConfig":"8"},{"size":7723,"mtime":1642511995443,"results":"12","hashOfConfig":"8"},{"size":4074,"mtime":1642511710009,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tqtcch",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/Users/ganeshkoushik/Documents/Projects/employee-challenges/src/index.js",[],"/Users/ganeshkoushik/Documents/Projects/employee-challenges/src/App.js",[],"/Users/ganeshkoushik/Documents/Projects/employee-challenges/src/reportWebVitals.js",[],"/Users/ganeshkoushik/Documents/Projects/employee-challenges/src/components/Login/Login.js",["29","30","31","32","33"],"import {React,useState,useEffect} from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport \"./login.css\";\n\nexport default function Login(){\n    const navigate = useNavigate();\n    const[show_register,setRegister] = useState(false)\n    const[employees,setEmployee] = useState([])\n    const { register, handleSubmit, reset, formState: { errors } } = useForm();\n    const onSubmit = (data,e) => {\n        if(show_register){\n            let check_data = null\n            check_data = employees.find(x => {\n                return x.employee_id === data.employee_id\n            })\n            if(check_data == null){\n                employees.push(data)\n                employees.forEach(x => {\n                    x['login_id'] = uuidv4();\n                })\n                localStorage.setItem(\"store_employee\",JSON.stringify(employees))\n                setEmployee(JSON.parse(localStorage.getItem(\"store_employee\")))\n                setRegister(false)\n            }\n            else{\n                alert(\"Employee Already Exists\")\n            }   \n        }\n        else{\n            let show_data = null\n            if(employees && employees.length){\n                show_data = employees.filter(x => {\n                    return x.employee_id === data.employee_id\n                })\n            }\n            console.log(show_data)\n            if(show_data && show_data.length == 0){\n                alert(\"Employee ID does not Exists\")\n            }\n            else{\n                let store_data\n                store_data = employees.find(x => {\n                    return x.employee_id === data.employee_id\n                })\n                sessionStorage.setItem(\"logged_in_user\",JSON.stringify(store_data))\n                navigate('/home')\n            }\n        }\n        e.target.reset();\n    }\n    let registerEmployee = () => {\n        if(!show_register){\n            setRegister(true)\n        }\n        else{\n            setRegister(false)\n        }\n    }\n\n    useEffect(() => {\n        let data = []\n        data = JSON.parse(localStorage.getItem(\"store_employee\"))\n        data = data === null ? [] : data\n        if(data.length == 0){\n            setEmployee([])\n        }\n        else{\n            setEmployee(data)\n        }\n    },[])\n\n    return( \n        <div className={show_register === true ? 'h-350 d-block login' : 'd-block login'}>\n            <h3>{show_register === true ? 'Sign Up' : 'Sign In'}</h3>\n            <hr />\n            <form className=\"mt-7px\" onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"form-group mb-0\">\n                    <label className=\"text-left d-block text-black\">Employee ID</label>\n                    <input className=\"form-control\" {...register(\"employee_id\",{required: true})} placeholder=\"Enter Employee ID\"></input>\n                </div>\n                {errors.employee_id && <div className=\"text-danger text-left fw-500\">Employee ID is Required</div>}\n                {\n                    show_register === true ?\n                        <div className=\"form-group mb-0 mt-16px\">\n                            <label className=\"text-left d-block text-black\">Employee Name</label>\n                            <input {...register(\"employee_name\", {required: true})} className=\"form-control\" placeholder=\"Enter Employee Name\"></input>\n                        </div>\n                    : null    \n                }\n                {errors.employee_name && <div className=\"text-danger text-left fw-500\">Employee Name is Required</div>}\n                <button type=\"submit\" className=\"btn btn-success btn-smm mt-12px fs-14 text-white\">\n                    SUBMIT\n                </button>\n                <a href=\"javascript:;\" className=\"fw-600 text-primary pointer d-block mt-7px\" onClick={registerEmployee}>{ show_register ? 'Please Click here to Login' : 'Please Click here to Register'}</a>\n            </form>\n        </div>\n    )\n}","/Users/ganeshkoushik/Documents/Projects/employee-challenges/src/components/Home/Home.js",["34","35","36","37","38","39"],"import {React,useState,useEffect} from 'react';\nimport './home.css';\nimport CreateChallenges from \"./CreateChallenges.js\";\nimport { useNavigate } from 'react-router-dom';\n\nexport default function Home(){\n    const navigate = useNavigate();\n    const [logged_in_user,setLoggedInUser] = useState({\n        employee_id: '',\n        employee_name: '',\n        login_id: ''\n    })\n    const [open,setOpen] = useState(false)\n    const [loading,setLoading] = useState(false)\n    let [challenges,setChallenges] = useState([])\n\n    let voterChallenge = (list) => {\n        if(list.voter_id == null && list.voter_id != logged_in_user.login_id){\n            list.count_info.count = list.const_count.count + 1\n            list.voter_id = logged_in_user.login_id\n            list.selected_employees.push(list.voter_id)\n            console.log(list.selected_employees)\n            setChallenges(challenges.map((challenge) => challenge._id === list._id ? {\n                ...challenge,\n                voter_id: logged_in_user.login_id\n            } : challenge));\n        }\n        else if(list.voter_id && list.voter_id != logged_in_user.login_id){\n            list.count_info.count = list.const_count.count + 1\n            list.voter_id = logged_in_user.login_id\n            list.selected_employees.push(list.voter_id)\n            console.log(list.selected_employees)\n            setChallenges(challenges.map((challenge) => challenge._id === list._id ? {\n                ...challenge,\n                voter_id: logged_in_user.login_id\n            } : challenge));\n        }\n        else if(list.voter_id && list.voter_id == logged_in_user.login_id){\n            let filter_employees = list.selected_employees.filter(x => {\n                if(x !== list.voter_id){\n                    return x\n                }\n            })\n            list.count_info.count = list.const_count.count - 1\n            list.voter_id = null\n            list.selected_employees = filter_employees\n            setChallenges(challenges.map((challenge) => challenge._id === list._id ? {\n                ...challenge,\n                voter_id: null,\n                selected_employees: filter_employees\n            } : challenge));\n        }\n        let store_data = []\n        store_data = challenges\n        localStorage.setItem(\"challenges\",JSON.stringify(store_data))\n        let counts = challenges.map(x => {return x.count_info})\n        localStorage.setItem(\"votes\",JSON.stringify(counts))\n    }\n\n    let addChallenge = () => {\n        setOpen(true)\n    }\n\n    let saveChallenge = (value) => {\n        setChallenges(JSON.parse(localStorage.getItem(\"challenges\")))\n        setOpen(false)\n    }\n\n    let hideChallenge = () => {\n        setOpen(false)\n    }\n\n    let formatDate = (date) => {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n    \n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n    \n        return [day, month, year].join('-');\n    }\n\n    let logOut = () => {\n        sessionStorage.removeItem(\"logged_in_user\")\n        navigate(\"/\")\n    }  \n\n    let loadData = () => {\n        setLoading(true)\n        setLoggedInUser(JSON.parse(sessionStorage.getItem(\"logged_in_user\")))\n        setChallenges(JSON.parse(localStorage.getItem(\"challenges\")))\n        let set_count = JSON.parse(localStorage.getItem(\"challenges\"))\n        if(set_count){\n            set_count.forEach(x => {\n                x.const_count = x.count_info\n                let selected_id = x.selected_employees.filter(z => {\n                    if(z === logged_in_user.login_id){\n                        return z\n                    }\n                })\n                console.log('test',selected_id)\n                x.voter_id = selected_id[0]\n            })\n            setChallenges(set_count)\n        }\n        challenges = challenges.sort(function (a, b) {\n            return a.created_date.localeCompare(b.created_date);\n        });\n        setTimeout(() => {\n            setLoading(false)\n        }, 50);\n    }\n    \n    useEffect(() => {\n        loadData()\n    },[])\n    \n    return(\n        <div className=\"h-100\">\n            {\n                loading === true ?\n                <div>\n                    Loading ....\n                </div> :\n                <div className=\"d-flex main-container\">\n                    <div className=\"header navbar-fuse-sidebar left-positioned open locked-open unfoldedSidebar p-3\">\n                        <div className=\"text-justify\">\n                            <div>{logged_in_user.employee_id}</div>\n                            <div>{logged_in_user.employee_name}</div>\n                        </div>\n                        <div className=\"logout\" onClick={logOut}>\n                            <i className=\"fa fa-sign-out text-white fs-16\"></i>\n                            Logout\n                        </div>\n                    </div>\n                    <div className=\"w-100 pt-10 pl-3 pr-3\">\n                        <h3 className=\"font-weight-bold text-center\">HACK IDEAS</h3>\n                        { open === false ?\n                            <div className=\"w-100\">\n                                <button type=\"button\" onClick={addChallenge} className=\"btn btn-success text-white d-block pull-right fs-14 fw-600 mt-3\">Create Challenges</button>\n                            </div> : null\n                        } \n                        <div className=\"mt-18 w-100\">\n                            { challenges && challenges.length ? \n                                <div>\n                                    { challenges && challenges.map((list,index) => (\n                                        <div key={index} className=\"list-challenges p-3 mt-3\">\n                                            <div className=\"d-flex justify-content-between align-items-center\">\n                                                <div className=\"fw-600\">{list.title}</div>\n                                                <div>\n                                                    <span className=\"pointer\" onClick={() => voterChallenge(list)}>\n                                                        {\n                                                            list.voter_id !== logged_in_user.login_id ? <i className=\"fs-14 fa\">&#xf087;</i> : <i className=\"fa fa-thumbs-up fs-14\"></i>\n                                                        }\n                                                    </span>\n                                                    <span className=\"text-primary\">{list.count_info.count} Votes</span>\n                                                    <span className=\"ml-4\">{formatDate(list.created_date)}</span>\n                                                </div>\n                                            </div>\n                                            <div className=\"mt-2 text-justify w-100\">{list.description}</div>\n                                        </div>   \n                                    ))}\n                                </div>\n                                :\n                                <div className=\"list-challenges p-3 mt-3 font-weight-bold fs-16\">\n                                    No Data\n                                </div>    \n                            }    \n                        </div>\n                    </div>\n                </div> \n            }\n            {\n                open === true ? <CreateChallenges style={{zIndex:'9999'}} open={open} saveChallenge={saveChallenge} hideChallenge={hideChallenge}></CreateChallenges> : null\n            }\n        </div>\n    )\n}","/Users/ganeshkoushik/Documents/Projects/employee-challenges/src/components/Home/CreateChallenges.js",["40","41"],"import {React, useState} from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { useForm } from \"react-hook-form\";\nimport { Modal } from 'react-responsive-modal';\nexport default function CreateChallenges(props){\n    const { register, handleSubmit, reset, formState: { errors } } = useForm();\n    const onSubmit = (data,e) => {\n        if(register.descripiton){\n            data['_id'] = uuidv4();\n            data['voter_id'] = null\n            data['count_info'] = {\n                _id: data._id,\n                count: 0\n            }\n            data['const_count'] = {\n                _id: data._id,\n                count: 0\n            }\n            data['selected_employees'] = []\n            data['created_date'] = new Date()\n            let store_data = []\n            let check_data = []\n            check_data = JSON.parse(localStorage.getItem(\"challenges\"))\n            if(check_data){\n                store_data = check_data\n                store_data.push(data)\n            }\n            else{\n                store_data.push(data)\n            }\n            let counts = store_data.map(x => {return x.count_info})\n            localStorage.setItem(\"votes\",JSON.stringify(counts))\n            localStorage.setItem(\"challenges\",JSON.stringify(store_data))\n            props.saveChallenge()\n        }\n        else{\n            alert(\"Please Enter Description\")\n        }\n    }\n    return(\n        <div>\n            <Modal open={props.open} classNames={{animationIn: 'customEnterAnimation',animationOut: 'customLeaveAnimation'}} animationDuration={500} className=\"p-4\" center>\n                <div className=\"modal-title\">\n                    <div>\n                        <h5>CREATE CHALLENGE</h5>\n                        <span className=\"mt-2\" onClick={props.hideChallenge}>\n                            <i className=\"fa fa-times-circle pointer text-white fs-20\"></i>\n                        </span>\n                    </div>\n                </div>\n                <div className=\"modal-body m-5\">\n                    <form className=\"mt-7px\" onSubmit={handleSubmit(onSubmit)}>\n                        <div className=\"form-group mb-0\">\n                            <label className=\"text-left d-block text-black\">Title</label>\n                            <input className=\"form-control\" {...register(\"title\",{required: true})} placeholder=\"Enter Title\"></input>\n                        </div>\n                        {errors.title && <div className=\"text-danger text-left fw-500\">Title is Required</div>}\n                        <div className=\"form-group mb-0 mt-16px\">\n                            <label className=\"text-left d-block text-black\">Description</label>\n                            <textarea {...register(\"description\", {required: true})} className=\"form-control\" placeholder=\"Enter Description\"></textarea>\n                        </div>\n                        {errors.descripiton && <div className=\"text-danger text-left fw-500\">Description is Required</div>}\n                        <div className=\"form-group mb-0 mt-16px\">\n                            <label className=\"text-left d-block text-black\">Tags</label>\n                            <select className=\"w-100\" {...register(\"tags\", { required: true })}>\n                                <option value=\"feature\">Feature</option>\n                                <option value=\"Technical\">Technical</option>\n                                <option value=\"deployment\">Deployment</option>\n                            </select>\n                        </div>    \n                        {errors.tags && <div className=\"text-danger text-left fw-500\">Tags is Required</div>}\n                        <div className=\"footer-actions mt-0 pt-3 d-block\">\n                            <button type=\"submit\" className=\"btn btn-success btn-smm mt-12px contentCenter d-block text-white fw-500 fs-14\">\n                                SAVE\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </Modal>\n       </div>     \n    )\n}",{"ruleId":"42","severity":1,"message":"43","line":11,"column":37,"nodeType":"44","messageId":"45","endLine":11,"endColumn":42},{"ruleId":"46","severity":1,"message":"47","line":39,"column":46,"nodeType":"48","messageId":"49","endLine":39,"endColumn":48},{"ruleId":"46","severity":1,"message":"47","line":66,"column":24,"nodeType":"48","messageId":"49","endLine":66,"endColumn":26},{"ruleId":"50","severity":1,"message":"51","line":96,"column":17,"nodeType":"52","endLine":96,"endColumn":122},{"ruleId":"53","severity":1,"message":"54","line":96,"column":25,"nodeType":"55","messageId":"56","endLine":96,"endColumn":39},{"ruleId":"46","severity":1,"message":"57","line":18,"column":51,"nodeType":"48","messageId":"49","endLine":18,"endColumn":53},{"ruleId":"46","severity":1,"message":"57","line":28,"column":48,"nodeType":"48","messageId":"49","endLine":28,"endColumn":50},{"ruleId":"46","severity":1,"message":"47","line":38,"column":48,"nodeType":"48","messageId":"49","endLine":38,"endColumn":50},{"ruleId":"58","severity":1,"message":"59","line":39,"column":69,"nodeType":"60","messageId":"61","endLine":39,"endColumn":71},{"ruleId":"58","severity":1,"message":"59","line":100,"column":65,"nodeType":"60","messageId":"61","endLine":100,"endColumn":67},{"ruleId":"62","severity":1,"message":"63","line":120,"column":7,"nodeType":"64","endLine":120,"endColumn":9,"suggestions":"65"},{"ruleId":"42","severity":1,"message":"66","line":1,"column":16,"nodeType":"44","messageId":"45","endLine":1,"endColumn":24},{"ruleId":"42","severity":1,"message":"43","line":6,"column":37,"nodeType":"44","messageId":"45","endLine":6,"endColumn":42},"no-unused-vars","'reset' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","Expected '!==' and instead saw '!='.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.","ArrayExpression",["67"],"'useState' is defined but never used.",{"desc":"68","fix":"69"},"Update the dependencies array to be: [loadData]",{"range":"70","text":"71"},[4193,4195],"[loadData]"]